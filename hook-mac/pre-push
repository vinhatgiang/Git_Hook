#!/bin/bash

# Git Hook: pre-push
# Platform: macOS
# Purpose: Prevent pushes to main and develop branches, detect force pushes and rebases

# Function to show macOS dialog
show_dialog() {
    osascript -e "display dialog \"$1\" buttons {\"OK\"} default button \"OK\" with icon caution with title \"$2\""
}

# Check for force push by examining command line arguments
if echo "$*" | grep -q -- "--force\|--force-with-lease\|-f"; then
    echo
    echo "FORCE PUSH BLOCKED"
    echo "Force push is not allowed."

    show_dialog "Force push is blocked.\n\nThis action is not allowed." "Force Push Blocked"
    
    exit 1
fi

# Check for rebase in commit history being pushed
check_for_rebase_in_history() {
    local local_sha="$1"
    local remote_sha="$2"
    
    # If remote_sha is all zeros, this is a new branch
    if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
        # Check last 10 commits for rebase patterns
        if git log --oneline -10 "$local_sha" | grep -q "^[a-f0-9]\{7\} [A-Z]"; then
            return 0
        fi
    else
        # Check commits between remote and local for rebase patterns
        if git log --oneline "$remote_sha..$local_sha" | grep -q "^[a-f0-9]\{7\} [A-Z]"; then
            return 0
        fi
    fi
    return 1
}

# Read push information from stdin and process each line
while read local_ref local_sha remote_ref remote_sha; do
    # Check for rebase in history
    if check_for_rebase_in_history "$local_sha" "$remote_sha"; then
        echo
        echo "REBASE DETECTED IN PUSH HISTORY"
        echo "The commits contain evidence of rebase operations."
        echo "Rebase is prohibited in this repository."
        echo "Push blocked."
        
        show_dialog "Rebase detected in push history.\n\nRebase is prohibited in this repository." "Push Blocked"
        
        exit 1
    fi
    
    # Extract branch name from remote ref (refs/heads/branch-name)
    if [[ "$remote_ref" =~ ^refs/heads/ ]]; then
        remote_branch=${remote_ref#refs/heads/}
        
        # Check if pushing to protected branches
        if [ "$remote_branch" = "main" ]; then
            echo
            echo "PUSH TO MAIN BRANCH BLOCKED"
            echo "This action is not allowed."
            
            show_dialog "Push to main branch is blocked.\n\nThis action is not allowed." "Push Blocked"
            
            exit 1
        fi
        
        if [ "$remote_branch" = "develop" ]; then
            echo
            echo "PUSH TO DEVELOP BRANCH BLOCKED"
            echo "This action is not allowed."
            
            show_dialog "Push to develop branch is blocked.\n\nThis action is not allowed." "Push Blocked"
            
            exit 1
        fi
    fi
done

echo "Pre-push checks passed"
exit 0

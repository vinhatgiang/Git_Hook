#!/bin/bash

# Git Hook: pre-push
# Platform: Windows (Git Bash)
# Purpose: Prevent pushes to main and develop branches, detect force pushes

show_dialog() {
    msg="$1"
    title="$2"
    powershell.exe -WindowStyle Hidden -Command "Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.MessageBox]::Show('$msg', '$title')" > /dev/null
}

# Check for force push by examining command line arguments
if echo "$*" | grep -q -- "--force\|--force-with-lease\|-f"; then
    echo
    echo "FORCE PUSH BLOCKED"
    echo "Force push is not allowed."

    show_dialog "Force push is blocked. This action is not allowed." "Force Push Blocked"
    
    exit 1
fi

# Read push information from stdin and process each line
while read local_ref local_sha remote_ref remote_sha; do
    # Extract branch name from remote ref (refs/heads/branch-name)
    if [[ "$remote_ref" =~ ^refs/heads/ ]]; then
        remote_branch=${remote_ref#refs/heads/}
        
        # Check if pushing to protected branches
        if [ "$remote_branch" = "main" ]; then
            echo
            echo "PUSH TO MAIN BRANCH BLOCKED"
            echo "This action is not allowed."
            
            show_dialog "Push to main branch is blocked. This action is not allowed." "Push Blocked"
            
            exit 1
        fi
        
        if [ "$remote_branch" = "develop" ]; then
            echo
            echo "PUSH TO DEVELOP BRANCH BLOCKED"
            echo "This action is not allowed."
            
            show_dialog "Push to develop branch is blocked. This action is not allowed." "Push Blocked"
            
            exit 1
        fi
    fi
done

echo "Pre-push checks passed"
exit 0